/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package modularcalculator;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;

/**
 *
 * @author chori
 */
public class Interfaz extends javax.swing.JFrame {

    /**
     * Creates new form Interfaz
     */
    public Interfaz() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        lblN = new javax.swing.JTextField();
        lblA = new javax.swing.JTextField();
        lblB = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        btnLimpiarInput = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        resultado = new javax.swing.JTextArea();
        jButton11 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        btnSuma = new javax.swing.JButton();
        btnMultiplicacion = new javax.swing.JButton();
        btnDivision = new javax.swing.JButton();
        btnRaizA = new javax.swing.JButton();
        bntRaizB = new javax.swing.JButton();
        bntInversoA = new javax.swing.JButton();
        btnInversoB = new javax.swing.JButton();
        btnCP = new javax.swing.JButton();
        btnAPotenciaB = new javax.swing.JButton();
        btnBPotenciaA = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Calculadora Modular");
        setBackground(new java.awt.Color(102, 0, 204));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        lblN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lblNActionPerformed(evt);
            }
        });
        lblN.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                lblNKeyTyped(evt);
            }
        });

        lblA.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                lblAKeyTyped(evt);
            }
        });

        lblB.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                lblBKeyTyped(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel2.setText("Zn:");

        jLabel3.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel3.setText("a:");

        jLabel4.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel4.setText("b:");

        btnLimpiarInput.setText("Limpiar Inputs");
        btnLimpiarInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarInputActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblA)
                            .addComponent(lblB)
                            .addComponent(lblN))
                        .addContainerGap())))
            .addComponent(btnLimpiarInput, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(jLabel2)
                .addGap(4, 4, 4)
                .addComponent(lblN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addGap(3, 3, 3)
                .addComponent(lblA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnLimpiarInput)
                .addContainerGap())
        );

        jLabel1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel1.setText("El resultado es:");

        resultado.setColumns(20);
        resultado.setRows(5);
        jScrollPane1.setViewportView(resultado);

        jButton11.setText("Limpiar panel");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel4Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(22, Short.MAX_VALUE)))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jButton11))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel4Layout.createSequentialGroup()
                    .addGap(42, 42, 42)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 234, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        btnSuma.setText("Suma");
        btnSuma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSumaActionPerformed(evt);
            }
        });

        btnMultiplicacion.setText("Multiplicacion");
        btnMultiplicacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMultiplicacionActionPerformed(evt);
            }
        });

        btnDivision.setText("Division");
        btnDivision.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDivisionActionPerformed(evt);
            }
        });

        btnRaizA.setText("Raiz en A");
        btnRaizA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRaizAActionPerformed(evt);
            }
        });

        bntRaizB.setText("Raiz en B");
        bntRaizB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntRaizBActionPerformed(evt);
            }
        });

        bntInversoA.setText("Inverso en A");
        bntInversoA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntInversoAActionPerformed(evt);
            }
        });

        btnInversoB.setText("Inverso en B");
        btnInversoB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInversoBActionPerformed(evt);
            }
        });

        btnCP.setText("Cuadrado perfecto");
        btnCP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCPActionPerformed(evt);
            }
        });

        btnAPotenciaB.setText("A^B");
        btnAPotenciaB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAPotenciaBActionPerformed(evt);
            }
        });

        btnBPotenciaA.setText("B^A");
        btnBPotenciaA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBPotenciaAActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnSuma, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(btnMultiplicacion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(btnDivision, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(btnRaizA, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(bntRaizB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(bntInversoA, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(btnInversoB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(btnCP, javax.swing.GroupLayout.DEFAULT_SIZE, 156, Short.MAX_VALUE)
            .addComponent(btnAPotenciaB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(btnBPotenciaA, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnSuma)
                .addGap(7, 7, 7)
                .addComponent(btnMultiplicacion)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDivision)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnRaizA)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bntRaizB)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bntInversoA)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnInversoB)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCP)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAPotenciaB)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBPotenciaA)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lblNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lblNActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lblNActionPerformed

    private boolean validateSpecialCaracterInput(String input) {
        boolean response = true;
        String REG_EXP = "\\¿+|\\?+|\\°+|\\¬+|\\|+|\\!+|\\#+|\\$+|"
                + "\\%+|\\&+|\\+|\\=+|\\’+|\\¡+|\\++|\\*+|\\~+|\\[+|\\]"
                + "+|\\{+|\\}+|\\^+|\\<+|\\>+|\\\"+ ";
        Pattern pattern = Pattern.compile(REG_EXP);
        Matcher matcher = pattern.matcher(input);

        if (matcher.find()) {
            response = false;
        }
        return response;
    }

    private String validateInput(String num1, String num2, String numzn) {
        String response = "";
        if (validateSpecialCaracterInput(numzn) && validateSpecialCaracterInput(num1)
                && validateSpecialCaracterInput(num2)) {
            if (validateNegativeNumberInput(numzn)) {
                response = "OK";
            } else {
                response = "Zn es un numero menor a cero.";
            }
        } else {
            response = "A, B o Zn tienen caracteres especiales.";
        }
        return response;
    }

    private boolean validateNegativeNumberInput(String input) {
        boolean response = true;
        if (Integer.parseInt(input) < 0) {
            response = false;
        }
        return response;
    }

    private void btnSumaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSumaActionPerformed
        BigInteger numzn, num1, num2, sumamod;
        String response = validateInput(lblA.getText(), lblB.getText(), lblN.getText());
        if (response.equals("OK")) {
            try {
                numzn = new BigInteger(lblN.getText());
                num1 = new BigInteger(lblA.getText());
                num2 = new BigInteger(lblB.getText());
                sumamod = (num1.add(num2)).mod(numzn);
                resultado.setText(String.valueOf(sumamod));
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Opción Invalida");
            }
        } else {
            JOptionPane.showMessageDialog(null, response);
            resultado.setText(":(");
        }


    }//GEN-LAST:event_btnSumaActionPerformed

    private void btnAPotenciaBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAPotenciaBActionPerformed
        BigInteger numzn, num1, num2, potenciamod;
        String response = validateInput(lblA.getText(), lblB.getText(), lblN.getText());
        if (response.equals("OK")) {
            try {
                numzn = new BigInteger(lblN.getText());
                num1 = new BigInteger(lblA.getText());
                num2 = new BigInteger(lblB.getText());

                potenciamod = num1.modPow(num2, numzn);
                resultado.setText(String.valueOf(potenciamod));

            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Opción Invalida");
            }
        } else {
            JOptionPane.showMessageDialog(null, response);
            resultado.setText(":(");
        }
    }//GEN-LAST:event_btnAPotenciaBActionPerformed

    private void btnMultiplicacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMultiplicacionActionPerformed
        BigInteger numzn, num1, num2, multipmod;
        String response = validateInput(lblA.getText(), lblB.getText(), lblN.getText());
        if (response.equals("OK")) {
            try {
                numzn = new BigInteger(lblN.getText());
                num1 = new BigInteger(lblA.getText());
                num2 = new BigInteger(lblB.getText());
                multipmod = (num1.multiply(num2)).mod(numzn);

                resultado.setText(String.valueOf(multipmod));
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Opción Invalida");
            }
        } else {
            JOptionPane.showMessageDialog(null, response);
            resultado.setText(":(");
        }
    }//GEN-LAST:event_btnMultiplicacionActionPerformed

    private BigInteger calcularCuadrado(int i, BigInteger mod) {
        BigInteger multiplicacion = BigInteger.valueOf(i * i);
        BigInteger res = multiplicacion.mod(mod);
        return res;
    }

    private void btnDivisionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDivisionActionPerformed
        BigInteger numzn, num1, num2, mcd, dividemod;
        String response = validateInput(lblA.getText(), lblB.getText(), lblN.getText());
        if (response.equals("OK")) {
            try {
                numzn = new BigInteger(lblN.getText());
                num1 = new BigInteger(lblA.getText());
                num2 = new BigInteger(lblB.getText());
                mcd = numzn.gcd(num2);
                if (mcd.intValue() == 1) {
                    dividemod = (num1.modInverse(num2)).mod(numzn);
                    resultado.setText(String.valueOf(dividemod));
                } else {
                    resultado.setText(String.valueOf(num1 + " y " + num2 + " no son primos relavitos. \nPor favor vuelve a intentarlo con valores diferentes."));
                }

            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Opción Invalida");
            }
        } else {
            JOptionPane.showMessageDialog(null, response);
            resultado.setText(":(");
        }
    }//GEN-LAST:event_btnDivisionActionPerformed

    private void btnRaizAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRaizAActionPerformed
        BigInteger numzn, num1, raiz;
        String raices = "";
        ArrayList<BigInteger> resul = new ArrayList<>();
        String response = validateInput(lblA.getText(), lblB.getText(), lblN.getText());
        if (response.equals("OK")) {
            try {
                numzn = new BigInteger(lblN.getText());
                num1 = new BigInteger(lblA.getText());
                for (int i = 0; i < numzn.intValue(); i++) {
                    raiz = calcularCuadrado(i, numzn);
                    if (num1.compareTo(raiz) == 0) {
                        resul.add(BigInteger.valueOf(i));
                    }
                }
                if (resul.isEmpty()) {
                    resultado.setText(lblA.getText() + " no tiene raiz cuadrada.");
                } else {
                    for (int j = 0; j < resul.size(); j++) {
                        if (j == 0) {
                            raices = raices + String.valueOf(resul.get(j));
                        } else {
                            raices = raices + "," + String.valueOf(resul.get(j));
                        }
                    }
                    resultado.setText("Las raices de " + num1 + " son:{ " + raices + " }");
                }

            } catch (ArithmeticException e) {
                resultado.setText("error");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Opción Invalida");
            }
        } else {
            JOptionPane.showMessageDialog(null, response);
            resultado.setText(":(");
        }
    }//GEN-LAST:event_btnRaizAActionPerformed

    private void bntRaizBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntRaizBActionPerformed
        BigInteger numzn, num1, raiz;
        String raices = "";
        ArrayList<BigInteger> resul = new ArrayList<>();
        String response = validateInput(lblA.getText(), lblB.getText(), lblN.getText());
        if (response.equals("OK")) {
            try {
                numzn = new BigInteger(lblN.getText());
                num1 = new BigInteger(lblB.getText());
                for (int i = 0; i < numzn.intValue(); i++) {
                    raiz = calcularCuadrado(i, numzn);
                    if (num1.compareTo(raiz) == 0) {
                        resul.add(BigInteger.valueOf(i));
                    }
                }
                if (resul.isEmpty()) {
                    resultado.setText(lblB.getText() + " no tiene raiz cuadrada.");
                } else {
                    for (int j = 0; j < resul.size(); j++) {
                        if (j == 0) {
                            raices = raices + String.valueOf(resul.get(j));
                        } else {
                            raices = raices + "," + String.valueOf(resul.get(j));
                        }
                    }
                    resultado.setText("Las raices de " + num1 + " son:{ " + raices + "} ");
                }

            } catch (ArithmeticException e) {
                resultado.setText("error");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Opción Invalida");
            }
        } else {
            JOptionPane.showMessageDialog(null, response);
            resultado.setText(":(");
        }
    }//GEN-LAST:event_bntRaizBActionPerformed

    private void bntInversoAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntInversoAActionPerformed
        BigInteger numzn, num1, inverso;
        String response = validateInput(lblA.getText(), lblB.getText(), lblN.getText());
        if (response.equals("OK")) {
            try {
                numzn = new BigInteger(lblN.getText());
                num1 = new BigInteger(lblA.getText());

                inverso = num1.modInverse(numzn);
                resultado.setText(String.valueOf(inverso));
            } catch (ArithmeticException e) {
                resultado.setText("No existe un inverso para A.");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Opción Invalida");
            }
        } else {
            JOptionPane.showMessageDialog(null, response);
            resultado.setText(":(");
        }
    }//GEN-LAST:event_bntInversoAActionPerformed

    private void btnInversoBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInversoBActionPerformed
        BigInteger numzn, num1, inverso;
        String response = validateInput(lblA.getText(), lblB.getText(), lblN.getText());
        if (response.equals("OK")) {
            try {
                numzn = new BigInteger(lblN.getText());
                num1 = new BigInteger(lblB.getText());

                inverso = num1.modInverse(numzn);
                resultado.setText(String.valueOf(inverso));
            } catch (ArithmeticException e) {
                resultado.setText("No existe un inverso para B.");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Opción Invalida");
            }
        } else {
            JOptionPane.showMessageDialog(null, response);
            resultado.setText(":(");
        }
    }//GEN-LAST:event_btnInversoBActionPerformed

    private void btnBPotenciaAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBPotenciaAActionPerformed
        BigInteger numzn, num1, num2, potenciamod;
        String response = validateInput(lblA.getText(), lblB.getText(), lblN.getText());
        if (response.equals("OK")) {
            try {
                numzn = new BigInteger(lblN.getText());
                num1 = new BigInteger(lblA.getText());
                num2 = new BigInteger(lblB.getText());

                potenciamod = num2.modPow(num1, numzn);
                resultado.setText(String.valueOf(potenciamod));

            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Opción Invalida");
            }
        } else {
            JOptionPane.showMessageDialog(null, response);
            resultado.setText(":(");
        }
    }//GEN-LAST:event_btnBPotenciaAActionPerformed

    private void btnCPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCPActionPerformed
        BigInteger numzn, num1, raiz;
        String cuadrados = "";
        ArrayList<BigInteger> resul = new ArrayList<>();
        String response = validateInput(lblA.getText(), lblB.getText(), lblN.getText());
        if (response.equals("OK")) {
            try {
                numzn = new BigInteger(lblN.getText());
                for (int i = 0; i < numzn.intValue(); i++) {
                    resul.add(calcularCuadrado(i, numzn));
                }
                if (resul.isEmpty()) {
                    resultado.setText("No existe cuadrados para Zn");
                } else {
                    for (int j = 0; j < resul.size(); j++) {
                        if (j == 0) {
                            cuadrados = cuadrados + String.valueOf(resul.get(j));
                        } else {
                            cuadrados = cuadrados + "," + String.valueOf(resul.get(j));
                        }
                    }
                    resultado.setText("La lista de cuadrador perfectos para Zn(" + numzn + ") son: \n "
                            + "{" + cuadrados + "}");
                }

            } catch (ArithmeticException e) {
                resultado.setText("error");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Opción Invalida");
            }
        } else {
            JOptionPane.showMessageDialog(null, response);
            resultado.setText(":(");
        }
    }//GEN-LAST:event_btnCPActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed

        resultado.setText("");
    }//GEN-LAST:event_jButton11ActionPerformed

    private void btnLimpiarInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarInputActionPerformed
        lblN.setText("");
        lblA.setText("");
        lblB.setText("");
    }//GEN-LAST:event_btnLimpiarInputActionPerformed

    private void lblNKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lblNKeyTyped
        char car = evt.getKeyChar();
        if((car<'0' || car>'9') && (car<',' || car>'.' )) evt.consume();
    }//GEN-LAST:event_lblNKeyTyped

    private void lblAKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lblAKeyTyped
        char car = evt.getKeyChar();
        if((car<'0' || car>'9') && (car<',' || car>'.' )) evt.consume();
    }//GEN-LAST:event_lblAKeyTyped

    private void lblBKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lblBKeyTyped
        char car = evt.getKeyChar();
        if((car<'0' || car>'9') && (car<',' || car>'.' )) evt.consume();
    }//GEN-LAST:event_lblBKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Interfaz().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bntInversoA;
    private javax.swing.JButton bntRaizB;
    private javax.swing.JButton btnAPotenciaB;
    private javax.swing.JButton btnBPotenciaA;
    private javax.swing.JButton btnCP;
    private javax.swing.JButton btnDivision;
    private javax.swing.JButton btnInversoB;
    private javax.swing.JButton btnLimpiarInput;
    private javax.swing.JButton btnMultiplicacion;
    private javax.swing.JButton btnRaizA;
    private javax.swing.JButton btnSuma;
    private javax.swing.JButton jButton11;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField lblA;
    private javax.swing.JTextField lblB;
    private javax.swing.JTextField lblN;
    private javax.swing.JTextArea resultado;
    // End of variables declaration//GEN-END:variables
}
